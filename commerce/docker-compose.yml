version: '3'

services:
  springboot-app1:
    build: .
    ports:
      - "8081:8080"

  springboot-app2:
    build: .
    ports:
      - "8082:8080"

  nginx:
    build: ./ci
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - springboot-app1
      - springboot-app2

  database:
    container_name: mysql_db
    image: mysql/mysql-server:5.7
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: users_db
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      TZ: 'Asia/Seoul'
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    networks:
      - test_network

  application:
    container_name: docker-compose-springBoot
    restart: on-failure
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
    depends_on:
      - database
    networks:
      - test_network

networks:
  test_network:
