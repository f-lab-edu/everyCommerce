version: '3'

services:
  database:
    container_name: mysql_db
    image: mysql/mysql-server:5.7
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: users_db
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: 1234
      TZ: 'Asia/Seoul'
    ports:
      - "3307:3306"
    volumes:
      - ./mysql/conf.d:/etc/mysql/conf.d # MySQL 설정 파일 위치
    command:
      - "mysqld"
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
  member:
    container_name: member1
    build:
      context: .
      dockerfile: ./commerce/Dockerfile
    ports:
      - "9090:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "1234"
    depends_on:
      - database
  member2:
    container_name: member2
    build:
      context: .
      dockerfile: ./commerce/Dockerfile
    ports:
      - "5000:9090"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "1234"
    depends_on:
      - database
  product:
    container_name: product
    build:
      context: .
      dockerfile: ./product/Dockerfile
    ports:
      - "9091:9091"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "1234"
    depends_on:
      - database
  order:
    container_name: order
    build:
      context: .
      dockerfile: ./order/Dockerfile
    ports:
      - "6000:9093"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql_db:3306/users_db?useSSL=false&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: "root"
      SPRING_DATASOURCE_PASSWORD: "1234"
    depends_on:
      - database
  nginx1:
    container_name: nginx-member
    image: nginx:latest
    build: ./commerce/ci
    ports:
      - "90:90"
    depends_on:
      - member
      - member2
  apigateway:
    container_name: gateway
    ports:
    - "9002:9002"
    build:
      context: .
      dockerfile: ./gateway/Dockerfile

